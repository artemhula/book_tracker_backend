generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id        String    @id(map: "users_pkey") @default(uuid()) @db.Uuid
  email     String    @unique(map: "users_email_key") @db.VarChar(255)
  fullName  String?   @map("full_name") @db.VarChar(255)
  avatarUrl String?   @map("avatar_url")
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  book      book[]
  record    record[]

  @@map("users")
}

model book {
  id          String   @id(map: "books_pkey") @default(uuid()) @db.Uuid
  userId      String   @map("user_id") @db.Uuid
  isbn        String
  title       String
  author      String?
  totalPages  Int?     @map("total_pages")
  currentPage Int?     @map("current_page")
  coverUrl    String?  @map("cover_url")
  user        user     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "books_user_id_fkey")
  record      record[]

  @@map("books")
}

model record {
  id         String    @id(map: "records_pkey") @default(uuid()) @db.Uuid
  book_id    String    @db.Uuid
  user_id    String    @db.Uuid
  pages_read Int
  read_at    DateTime? @default(now()) @db.Timestamp(6)
  book       book      @relation(fields: [book_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "records_book_id_fkey")
  user       user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "records_user_id_fkey")

  @@map("records")
}
